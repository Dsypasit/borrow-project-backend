// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model ProductItem {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  serialNumber String        @unique
  isBroken     Boolean       @default(false)
  room         Room?         @relation(fields: [roomId], references: [id]) // ? is optional
  roomId       String?       @db.ObjectId
  source       Source?       @relation(fields: [sourceId], references: [id])
  sourceId     String?       @db.ObjectId
  product      Product       @relation(fields: [productId], references: [id])
  productId    String        @db.ObjectId
  transactions Transaction[]
}

model Room {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  name         String        @unique
  ProductItems ProductItem[]
}

model Source {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  name         String        @unique
  ProductItems ProductItem[]
}

model Product {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  name            String        @unique
  description     String?
  usageFrequency  Int           @default(0)
  totalAmount     Int           @default(0)
  availableAmount Int           @default(0)
  image           String?
  ProductItems    ProductItem[]
}

model Transaction {
  id              String      @id @default(auto()) @map("_id") @db.ObjectId
  isReturn        Boolean     @default(false)
  startDate       DateTime    @default(now())
  endDate         DateTime?
  updateDate      DateTime    @updatedAt // Check update date
  deadline        DateTime
  location        String
  productItem     ProductItem @relation(fields: [serialNumberRef], references: [serialNumber])
  serialNumberRef String
  user            User        @relation(fields: [userId], references: [id])
  userId          String      @db.ObjectId
}

model User {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  email        String
  username     String
  phoneNumber  String
  transactions Transaction[]
}

model Admin {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  role     String  @default("Staff")
  email    String  @unique
  password String
  phone    String?
}
